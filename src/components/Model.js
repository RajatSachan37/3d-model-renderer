/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";

export function Model(props) {
  const { nodes, materials } = useGLTF("/model.gltf");
  return (
    <group {...props} dispose={null} scale={0.15}>
      <mesh
        geometry={nodes.Tube001.geometry}
        material={materials["Material #25"]}
        position={[0, 0, -0.86]}
      />
      <mesh
        geometry={nodes.Tube012.geometry}
        material={materials["Material #25"]}
        position={[0, 0, -0.86]}
      />
      <mesh
        geometry={nodes["25mm003"].geometry}
        material={materials["21 - Default"]}
        position={[-2.71, 10.11, -1.03]}
        rotation={[-1.75, -0.17, 2.09]}
      />
      <mesh
        geometry={nodes.Capsule033.geometry}
        material={materials["Material #25"]}
        position={[-0.55, 6.86, -1.39]}
        rotation={[-1.75, -0.17, -2.62]}
      />
      <mesh
        geometry={nodes.Tube014.geometry}
        material={materials["Material #25"]}
        position={[-2.62, 9.6, -0.94]}
        rotation={[1.4, 0.17, -Math.PI / 6]}
      />
      <mesh
        geometry={nodes.Capsule034.geometry}
        material={materials["Material #25"]}
        position={[-1.21, 7.18, 1.1]}
        rotation={[-1.75, -0.17, 2.09]}
      />
      <mesh
        geometry={nodes.Capsule035.geometry}
        material={materials["Material #25"]}
        position={[-3.67, 6.64, 0.51]}
        rotation={[-1.75, -0.17, Math.PI / 6]}
      />
      <mesh
        geometry={nodes.Capsule036.geometry}
        material={materials["Material #25"]}
        position={[-3.01, 6.32, -1.97]}
        rotation={[-1.75, -0.17, -Math.PI / 3]}
      />
      <mesh
        geometry={nodes.Capsule025.geometry}
        material={materials["Material #25"]}
        position={[-1.59, 7.01, 0.92]}
        rotation={[-Math.PI / 2, 0, Math.PI / 6]}
      />
      <mesh
        geometry={nodes.Tube011.geometry}
        material={materials["Material #25"]}
        position={[0, 9.95, 0]}
        rotation={[Math.PI / 2, 0, 2.62]}
      />
      <mesh
        geometry={nodes.Capsule026.geometry}
        material={materials["Material #25"]}
        position={[-0.92, 7.01, -1.59]}
        rotation={[-Math.PI / 2, 0, -Math.PI / 3]}
      />
      <mesh
        geometry={nodes.Capsule027.geometry}
        material={materials["Material #25"]}
        position={[1.59, 7.01, -0.92]}
        rotation={[-Math.PI / 2, 0, -2.62]}
      />
      <mesh
        geometry={nodes.Capsule028.geometry}
        material={materials["Material #25"]}
        position={[0.92, 7.01, 1.59]}
        rotation={[-Math.PI / 2, 0, 2.09]}
      />
      <mesh
        geometry={nodes["25mm001"].geometry}
        material={materials["21 - Default"]}
        position={[0, 10.47, 0]}
        rotation={[-Math.PI / 2, 0, -Math.PI / 3]}
      />
      <mesh
        geometry={nodes["25mm002"].geometry}
        material={materials["21 - Default"]}
        position={[2.71, 10.11, 1.03]}
        rotation={[-1.4, 0.17, -Math.PI / 3]}
      />
      <mesh
        geometry={nodes.Capsule029.geometry}
        material={materials["Material #25"]}
        position={[0.55, 6.86, 1.39]}
        rotation={[-1.4, 0.17, Math.PI / 6]}
      />
      <mesh
        geometry={nodes.Tube013.geometry}
        material={materials["Material #25"]}
        position={[2.62, 9.6, 0.94]}
        rotation={[1.75, -0.17, 2.62]}
      />
      <mesh
        geometry={nodes.Capsule030.geometry}
        material={materials["Material #25"]}
        position={[1.21, 7.18, -1.1]}
        rotation={[-1.4, 0.17, -Math.PI / 3]}
      />
      <mesh
        geometry={nodes.Capsule031.geometry}
        material={materials["Material #25"]}
        position={[3.67, 6.64, -0.51]}
        rotation={[-1.4, 0.17, -2.62]}
      />
      <mesh
        geometry={nodes.Capsule032.geometry}
        material={materials["Material #25"]}
        position={[3.01, 6.32, 1.97]}
        rotation={[-1.4, 0.17, 2.09]}
      />
    </group>
  );
}

useGLTF.preload("/model.gltf");
